class ReportGenerator:
    """Generates an HTML report of vulnerable URLs and payloads."""

    def __init__(self, scan_results):
        self.scan_results = scan_results

    def generate_report(self, output_file):
        self._generate_html(output_file)

    def _generate_html(self, output_file):
        with open(output_file, "w", encoding="utf-8") as f:
            f.write("<html><head><title>Vulnerability Report</title></head><body>")
            f.write("<h2>Vulnerable URLs</h2>")
            f.write("<table border='1' cellpadding='5'><tr><th>URL</th><th>Payload(s)</th></tr>")
            found = False
            for url, vulns in self.scan_results.items():
                if vulns:
                    found = True
                    payloads = "<br>".join(vulns)
                    f.write(f"<tr><td>{url}</td><td>{payloads}</td></tr>")
            if not found:
                f.write("<tr><td colspan='2'>No vulnerabilities found so far.</td></tr>")
            f.write("</table></body></html>")